(()=>{"use strict";var e={formSelector:".popup__data",inputSelector:".popup__input",submitButtonSelector:".popup__delivery",inactiveButtonClass:"popup__delivery_inactive",popupInputError:".popup__input-error",inputErrorClass:"popup__input_type_error",errorClass:"popup__input-error_active",templateItem:".element-template",cardButtonDelete:".element__trash",cardButtonLike:".element__like",cardButtonLikeActive:"element__like_active",cardList:".elements",cardTextItem:".element__title",cardImageItem:".element__image",cardPopup:".popup-bigpic",cardPopupImage:".popup-bigpic__pic",cardPopupTitle:".popup-bigpic__title",addCardForm:".popup-post__data",deleteCardPopup:".popup-delete__content"},t=document.querySelector(".profile__button-ed-self"),n=(document.querySelector(".element-template"),document.querySelector(".popup-profile__close"),document.querySelector(".popup__input_data_name")),o=document.querySelector(".popup__input_data_rank"),r=document.querySelector(".popup__data_one"),i=document.querySelector(".popup-post__data"),c=(document.querySelector(".popup-delete__delivery"),document.querySelector(".popup-avatar__data")),u=document.querySelector(".profile__button-add-self"),a=(document.querySelector(".popup-post__input_data_name"),document.querySelector(".popup-post__input_data_rank"),document.querySelector(".popup-delete"),document.querySelector(".profile__avatar"),document.querySelector(".profile__button-edit"));function l(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var s=function(){function e(t){var n=t.config,o=t.data,r=t.userName,i=t.handleCardClick,c=t.selectorTemplate,u=t.handleDeleteIconClick;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._config=n,this._name=o.name,this._link=o.link,this._userName=r,this._ownerName=o.owner.name,this._template=document.querySelector(c),this._handleCardClick=i,this._handleDeleteIconClick=u}var t,n;return t=e,(n=[{key:"_getTemplate",value:function(){return this._template.content.querySelector(".element").cloneNode(!0)}},{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._deleteButton=this._element.querySelector(this._config.cardButtonDelete),this._likeButton=this._element.querySelector(this._config.cardButtonLike),this._cardImage=this._element.querySelector(".element__image"),this._setEventListeners(),this._cardImage.src=this._link,this._cardImage.alt=this._link,this._element.querySelector(".element__title").textContent=this._name,console.log(this._userName),this._element}},{key:"getElement",value:function(){return this._element}},{key:"_likeCard",value:function(e){this._likeButton.classList.toggle(this._config.cardButtonLikeActive)}},{key:"_deleteCard",value:function(e){this._element.remove()}},{key:"_setEventListeners",value:function(){var e=this;this._deleteButton.addEventListener("click",(function(t){e._handleDeleteIconClick()})),this._likeButton.addEventListener("click",(function(t){e._likeCard(t)})),this._cardImage.addEventListener("click",(function(){e._handleCardClick(e._name,e._link)}))}},{key:"_removeUserDelete",value:function(){this._userName!==this._ownerName&&this._deleteButton.remove()}}])&&l(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();const p=s;function f(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var d=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._config=t,this._form=n,this._formButton=this._form.querySelector(this._config.submitButtonSelector),this._inputList=Array.from(this._form.querySelectorAll(this._config.inputSelector))}var t,n;return t=e,(n=[{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showError(e,e.validationMessage)}},{key:"_showError",value:function(e,t){var n=this._form.querySelector(".".concat(e.id,"-error"));e.classList.add(this._config.inputErrorClass),n.textContent=t,n.classList.add(this._config.errorClass)}},{key:"_hideInputError",value:function(e){var t=this._form.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._config.inputErrorClass),t.classList.remove(this._config.errorClass),t.textContent=""}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput(this._inputList)?this._formButton.disabled=!0:this._formButton.disabled=!1}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"_setEventListeners",value:function(){var e=this;this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._toggleButtonState(),e._checkInputValidity(t)}))}))}},{key:"disableSubmitButton",value:function(){this._formButton.disabled=!0}},{key:"enableValidation",value:function(){this._setEventListeners()}}])&&f(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();const y=d;function h(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var _=function(){function e(t,n){var o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=o,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"renderElements",value:function(){var e=this;this._items.forEach((function(t){e._renderer(t)}))}},{key:"addItem",value:function(e){this._container.append(e)}},{key:"setCards",value:function(e){this._items=e}}])&&h(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function v(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var m=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popup=document.querySelector(t),this._popupCloseButton=this._popup.querySelector(".popup__close"),this._escapeClose=this._handleEscClose.bind(this)}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._escapeClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._escapeClose)}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"_closeByOverlayPress",value:function(e){e.target===e.currentTarget&&this.close()}},{key:"setEventListeners",value:function(){var e=this;this._popup.addEventListener("mousedown",(function(t){return e._closeByOverlayPress(t)})),this._popupCloseButton.addEventListener("click",(function(){e.close()}))}}])&&v(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function b(e){return b="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},b(e)}function g(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function k(){return k="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var o=w(e,t);if(o){var r=Object.getOwnPropertyDescriptor(o,t);return r.get?r.get.call(arguments.length<3?e:n):r.value}},k.apply(this,arguments)}function w(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=O(e)););return e}function S(e,t){return S=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},S(e,t)}function E(e,t){if(t&&("object"===b(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function O(e){return O=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},O(e)}var C=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&S(e,t)}(c,e);var t,n,o,r,i=(o=c,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=O(o);if(r){var n=O(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return E(this,e)});function c(e){var t,n=e.popupSelector,o=e.submitCallBack;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),(t=i.call(this,n))._submitCallBack=o,t._form=t._popup.querySelector(".popup__data"),t._inputs=Array.from(t._form.querySelectorAll(".popup__input")),t._submitButton=t._form.querySelector(".popup__delivery"),t}return t=c,(n=[{key:"_getInputValues",value:function(){var e={};return this._inputs.forEach((function(t){e[t.name]=t.value})),e}},{key:"close",value:function(){k(O(c.prototype),"close",this).call(this),this._form.reset()}},{key:"setEventListeners",value:function(){var e=this;k(O(c.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(),e._submitCallBack(e._getInputValues())}))}}])&&g(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),c}(m);function j(e){return j="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},j(e)}function P(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function L(){return L="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var o=B(e,t);if(o){var r=Object.getOwnPropertyDescriptor(o,t);return r.get?r.get.call(arguments.length<3?e:n):r.value}},L.apply(this,arguments)}function B(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=T(e)););return e}function I(e,t){return I=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},I(e,t)}function q(e,t){if(t&&("object"===j(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function T(e){return T=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},T(e)}var R=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&I(e,t)}(c,e);var t,n,o,r,i=(o=c,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=T(o);if(r){var n=T(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return q(this,e)});function c(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),(t=i.call(this,e))._popupBigpicImage=t._popup.querySelector(".popup-bigpic__pic"),t._popupBigpicTitle=t._popup.querySelector(".popup-bigpic__title"),t}return t=c,(n=[{key:"open",value:function(e,t){this._popupBigpicTitle.textContent=e,this._popupBigpicImage.src=t,this._popupBigpicImage.alt=e,L(T(c.prototype),"open",this).call(this)}},{key:"close",value:function(){L(T(c.prototype),"close",this).call(this)}},{key:"setEventListeners",value:function(){L(T(c.prototype),"setEventListeners",this).call(this)}}])&&P(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),c}(m);function N(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var D=function(){function e(t){var n=t.userName,o=t.userInfo,r=t.avatar;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._userName=document.querySelector(n),this._userInfo=document.querySelector(o),this._avatar=document.querySelector(r)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{username:this._userName.textContent,info:this._userInfo.textContent,avatar:this._avatar.src}}},{key:"setUserInfo",value:function(e){this._userName.textContent=e.name,this._userInfo.textContent=e.about,this._avatar.src=e.avatar}}])&&N(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function x(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}const U=function(){function e(t){var n=t.host,o=t.token;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._host=n,this._token=o}var t,n;return t=e,(n=[{key:"_getHeaders",value:function(){return{authorization:this._token}}},{key:"getCards",value:function(){return fetch("".concat(this._host,"/cards"),{headers:this._getHeaders()}).then((function(e){if(e.ok)return e.json();throw new Error("Ошибка при загрузке данных")}))}},{key:"addCard",value:function(e){return fetch("".concat(this._host,"/cards"),{method:"POST",headers:{authorization:"dfd0d591-2c36-49ee-a6dc-331afeedf1bc","Content-Type":"application/json"},body:JSON.stringify({name:e.name,link:e.link})}).then((function(e){if(e.ok)return e.json();throw new Error("Ошибка при загрузке данных")}))}},{key:"deleteCard",value:function(e){return fetch("".concat(this._host,"/cards/").concat(e),{method:"DELETE",headers:this._getHeaders()}).then((function(e){if(e.ok)return e.json();throw new Error("Ошибка при загрузке данных")}))}},{key:"getUserInfo",value:function(){return fetch("".concat(this._host,"/users/me"),{method:"GET",headers:this._getHeaders()}).then((function(e){if(e.ok)return e.json();throw new Error("Ошибка при загрузке данных")}))}},{key:"editUserInfo",value:function(e){return fetch("".concat(this._host,"/users/me"),{method:"PATCH",headers:{authorization:"dfd0d591-2c36-49ee-a6dc-331afeedf1bc","Content-Type":"application/json"},body:JSON.stringify({name:e.name,about:e.rank})}).then((function(e){if(e.ok)return e.json();throw new Error("Ошибка при загрузке данных")}))}},{key:"editAvatar",value:function(e){return fetch("".concat(this._host,"/users/me/avatar"),{method:"PATCH",headers:{authorization:"dfd0d591-2c36-49ee-a6dc-331afeedf1bc","Content-Type":"application/json"},body:JSON.stringify({avatar:e.link})}).then((function(e){if(e.ok)return e.json();throw new Error("Ошибка при загрузке данных")}))}},{key:"setLikeCard",value:function(e){return fetch("".concat(this._host,"/cards/").concat(e,"/likes"),{method:"PUT",headers:{authorization:"dfd0d591-2c36-49ee-a6dc-331afeedf1bc","Content-Type":"application/json"},body:JSON.stringify({avatar:data.link})}).then((function(e){if(e.ok)return e.json();throw new Error("Ошибка при загрузке данных")}))}}])&&x(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function A(e){return A="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},A(e)}function V(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function H(){return H="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var o=z(e,t);if(o){var r=Object.getOwnPropertyDescriptor(o,t);return r.get?r.get.call(arguments.length<3?e:n):r.value}},H.apply(this,arguments)}function z(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=G(e)););return e}function J(e,t){return J=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},J(e,t)}function F(e,t){if(t&&("object"===A(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function G(e){return G=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},G(e)}var M=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&J(e,t)}(c,e);var t,n,o,r,i=(o=c,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=G(o);if(r){var n=G(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return F(this,e)});function c(e){var t,n=e.popupSelector;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),(t=i.call(this,n))._formSubmit=t._popup.querySelector(".popup__delivery"),t}return t=c,(n=[{key:"setEventListeners",value:function(){H(G(c.prototype),"setEventListeners",this).call(this),this._formSubmit.addEventListener("click",(function(e){e.preventDefault()}))}}])&&V(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),c}(m),K=new R(".popup-bigpic");K.setEventListeners();var Q=new M({popupSelector:".popup-delete"});Q.setEventListeners();var W=new C({popupSelector:".popup-avatar",submitCallBack:function(e){ne.editAvatar(e).then((function(e){console.log(e),te.setUserInfo(e),W.close()}))}});W.setEventListeners();var X=new C({popupSelector:".popup-profile",submitCallBack:function(e){ne.editUserInfo(e).then((function(e){console.log(e),te.setUserInfo(e),X.close()})).catch((function(e){console.log("Error: ".concat(e))}))}});X.setEventListeners();var Y=new C({popupSelector:".popup-post",submitCallBack:function(e){ne.addCard(e).then((function(e){console.log(e),Z.addItem(oe(e)),Y.close()})).catch((function(e){console.log("ошибочка вышла")}))}});Y.setEventListeners();var Z=new _({renderer:function(e){Z.addItem(oe(e))}},".elements");new y(e,r).enableValidation();var $=new y(e,i);$.enableValidation(),new y(e,c).enableValidation();var ee,te=new D({userName:".profile__name",userInfo:".profile__rank",avatar:".profile__avatar"}),ne=new U({host:"https://mesto.nomoreparties.co/v1/cohort-47/",token:"dfd0d591-2c36-49ee-a6dc-331afeedf1bc","Content-Type":"application/json"});function oe(t){return new p({config:e,data:t,userName:ee,handleCardClick:function(e,t){K.open(e,t)},selectorTemplate:".element-template",handleDeleteIconClick:function(){Q.open()}}).generateCard()}ne.getUserInfo().then((function(e){te.setUserInfo(e),ee=e.name,console.log(ee)})).catch((function(e){console.log("Ошибочка вышла")})),ne.getCards().then((function(e){Z.setCards(e),Z.renderElements()})),t.addEventListener("click",(function(){var e=te.getUserInfo();n.value=e.username,o.value=e.info,X.open()})),u.addEventListener("click",(function(){$.disableSubmitButton(),Y.open()})),a.addEventListener("click",(function(){W.open()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,