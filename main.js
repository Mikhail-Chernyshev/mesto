(()=>{"use strict";var e={formSelector:".popup__data",inputSelector:".popup__input",submitButtonSelector:".popup__delivery",inactiveButtonClass:"popup__delivery_inactive",popupInputError:".popup__input-error",inputErrorClass:"popup__input_type_error",errorClass:"popup__input-error_active",templateItem:".element-template",cardButtonDelete:".element__trash",cardButtonLike:".element__like",cardButtonLikeActive:"element__like_active",cardList:".elements",cardTextItem:".element__title",cardImageItem:".element__image",cardPopup:".popup-bigpic",cardPopupImage:".popup-bigpic__pic",cardPopupTitle:".popup-bigpic__title",addCardForm:".popup-post__data",deleteCardPopup:".popup-delete__content",likeScore:".element__score"},t=document.querySelector(".profile__button-ed-self"),n=(document.querySelector(".element-template"),document.querySelector(".popup-profile__close"),document.querySelector(".popup__input_data_name")),o=document.querySelector(".popup__input_data_rank"),r=document.querySelector(".popup__data_one"),i=document.querySelector(".popup-post__data"),c=document.querySelector(".popup-delete__delivery"),a=document.querySelector(".popup-avatar__data"),u=document.querySelector(".profile__button-add-self"),l=(document.querySelector(".popup-post__input_data_name"),document.querySelector(".popup-post__input_data_rank"),document.querySelector(".popup-delete"),document.querySelector(".profile__avatar"),document.querySelector(".profile__button-edit"));function s(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var p=function(){function e(t){var n=t.config,o=t.data,r=t.userName,i=t.handleCardClick,c=t.selectorTemplate,a=t.handleDeleteIconClick,u=t.handleSetLike,l=t.handleRemoveLike;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._config=n,this._name=o.name,this._link=o.link,this._likes=o.likes,this._likesAll=this._config.likeScore,this._userName=r,this._ownerName=o.owner.name,this._template=document.querySelector(c),this._handleCardClick=i,this._cardId=o._id,this._userId=o.owner.id,this._handleSetLike=u,this._handleDeleteIconClick=a,this._handleRemoveLike=l}var t,n;return t=e,n=[{key:"_getTemplate",value:function(){return this._template.content.querySelector(".element").cloneNode(!0)}},{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._deleteButton=this._element.querySelector(this._config.cardButtonDelete),this._likeButton=this._element.querySelector(this._config.cardButtonLike),this._cardImage=this._element.querySelector(".element__image"),this._setEventListeners(),this._cardImage.src=this._link,this._cardImage.alt=this._link,this._removeUserDelete(),this._element.querySelector(".element__title").textContent=this._name,this._element}},{key:"getElement",value:function(){return this._element}},{key:"likeCard",value:function(){this._likes=data.likes,this._likesAll.textContent=this._likes.length,this._likeButton.classList.toggle(this._config.cardButtonLikeActive)}},{key:"deleteCard",value:function(e){this._element.remove(e)}},{key:"_setEventListeners",value:function(){var e=this;this._deleteButton.addEventListener("click",(function(t){e._handleDeleteIconClick(e._cardId)})),this._likeButton.addEventListener("click",(function(){e._likeButton.classList.contains("element__like_active")?(e._handleRemoveLike(e._cardId),e._likes+=1):e._handleSetLike(e._cardId)})),this._cardImage.addEventListener("click",(function(){e._handleCardClick(e._name,e._link)}))}},{key:"_removeUserDelete",value:function(){this._userName!==this._ownerName&&this._deleteButton.remove()}},{key:"_isCardLiked",value:function(){var e=this;this._likes.some((function(t){return e._userId===t._id}))&&this._likeButton.classList.add("element__like_active")}}],n&&s(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();const f=p;function d(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var h=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._config=t,this._form=n,this._formButton=this._form.querySelector(this._config.submitButtonSelector),this._inputList=Array.from(this._form.querySelectorAll(this._config.inputSelector))}var t,n;return t=e,(n=[{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showError(e,e.validationMessage)}},{key:"_showError",value:function(e,t){var n=this._form.querySelector(".".concat(e.id,"-error"));e.classList.add(this._config.inputErrorClass),n.textContent=t,n.classList.add(this._config.errorClass)}},{key:"_hideInputError",value:function(e){var t=this._form.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._config.inputErrorClass),t.classList.remove(this._config.errorClass),t.textContent=""}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput(this._inputList)?this._formButton.disabled=!0:this._formButton.disabled=!1}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"_setEventListeners",value:function(){var e=this;this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._toggleButtonState(),e._checkInputValidity(t)}))}))}},{key:"disableSubmitButton",value:function(){this._formButton.disabled=!0}},{key:"enableValidation",value:function(){this._setEventListeners()}}])&&d(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();const _=h;function y(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var v=function(){function e(t,n){var o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=o,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"renderElements",value:function(){var e=this;this._items.forEach((function(t){e._renderer(t)}))}},{key:"addItem",value:function(e){this._container.append(e)}},{key:"setCards",value:function(e){this._items=e}}])&&y(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function m(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var b=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popup=document.querySelector(t),this._popupCloseButton=this._popup.querySelector(".popup__close"),this._escapeClose=this._handleEscClose.bind(this)}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._escapeClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._escapeClose)}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"_closeByOverlayPress",value:function(e){e.target===e.currentTarget&&this.close()}},{key:"setEventListeners",value:function(){var e=this;this._popup.addEventListener("mousedown",(function(t){return e._closeByOverlayPress(t)})),this._popupCloseButton.addEventListener("click",(function(){e.close()}))}}])&&m(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function k(e){return k="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},k(e)}function g(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function w(){return w="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var o=S(e,t);if(o){var r=Object.getOwnPropertyDescriptor(o,t);return r.get?r.get.call(arguments.length<3?e:n):r.value}},w.apply(this,arguments)}function S(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=O(e)););return e}function C(e,t){return C=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},C(e,t)}function E(e,t){if(t&&("object"===k(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function O(e){return O=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},O(e)}var j=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&C(e,t)}(c,e);var t,n,o,r,i=(o=c,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=O(o);if(r){var n=O(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return E(this,e)});function c(e){var t,n=e.popupSelector,o=e.submitCallBack;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),(t=i.call(this,n))._submitCallBack=o,t._form=t._popup.querySelector(".popup__data"),t._inputs=Array.from(t._form.querySelectorAll(".popup__input")),t._submitButton=t._form.querySelector(".popup__delivery"),t._submitButtonOriginal=t._submitButton.textContent,t}return t=c,(n=[{key:"_getInputValues",value:function(){var e={};return this._inputs.forEach((function(t){e[t.name]=t.value})),e}},{key:"close",value:function(){w(O(c.prototype),"close",this).call(this),this._form.reset()}},{key:"setEventListeners",value:function(){var e=this;w(O(c.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(),e._submitCallBack(e._getInputValues())}))}},{key:"loading",value:function(e){this._submitButton.textContent=e?"Сохранение...":this._submitButtonOriginal}}])&&g(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),c}(b);function L(e){return L="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},L(e)}function P(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function B(){return B="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var o=I(e,t);if(o){var r=Object.getOwnPropertyDescriptor(o,t);return r.get?r.get.call(arguments.length<3?e:n):r.value}},B.apply(this,arguments)}function I(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=R(e)););return e}function T(e,t){return T=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},T(e,t)}function q(e,t){if(t&&("object"===L(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function R(e){return R=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},R(e)}var x=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&T(e,t)}(c,e);var t,n,o,r,i=(o=c,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=R(o);if(r){var n=R(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return q(this,e)});function c(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),(t=i.call(this,e))._popupBigpicImage=t._popup.querySelector(".popup-bigpic__pic"),t._popupBigpicTitle=t._popup.querySelector(".popup-bigpic__title"),t}return t=c,(n=[{key:"open",value:function(e,t){this._popupBigpicTitle.textContent=e,this._popupBigpicImage.src=t,this._popupBigpicImage.alt=e,B(R(c.prototype),"open",this).call(this)}},{key:"close",value:function(){B(R(c.prototype),"close",this).call(this)}},{key:"setEventListeners",value:function(){B(R(c.prototype),"setEventListeners",this).call(this)}}])&&P(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),c}(b);function D(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var N=function(){function e(t){var n=t.userName,o=t.userInfo,r=t.avatar;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._userName=document.querySelector(n),this._userInfo=document.querySelector(o),this._avatar=document.querySelector(r)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{username:this._userName.textContent,info:this._userInfo.textContent,avatar:this._avatar.src}}},{key:"setUserInfo",value:function(e){this._userName.textContent=e.name,this._userInfo.textContent=e.about,this._avatar.src=e.avatar}}])&&D(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function U(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}const A=function(){function e(t){var n=t.host,o=t.token;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._host=n,this._token=o}var t,n;return t=e,(n=[{key:"_getHeaders",value:function(){return{authorization:this._token}}},{key:"getCards",value:function(){return fetch("".concat(this._host,"/cards"),{headers:this._getHeaders()}).then((function(e){if(e.ok)return e.json();throw new Error("Ошибка при загрузке данных")}))}},{key:"addCard",value:function(e){return fetch("".concat(this._host,"/cards"),{method:"POST",headers:{authorization:"dfd0d591-2c36-49ee-a6dc-331afeedf1bc","Content-Type":"application/json"},body:JSON.stringify({name:e.name,link:e.link})}).then((function(e){if(e.ok)return e.json();throw new Error("Ошибка при загрузке данных")}))}},{key:"deleteCard",value:function(e){return fetch("".concat(this._host,"/cards/").concat(e),{method:"DELETE",headers:{authorization:"dfd0d591-2c36-49ee-a6dc-331afeedf1bc","Content-Type":"application/json"}}).then((function(e){if(e.ok)return e.json();throw new Error("Ошибка при загрузке данных")}))}},{key:"getUserInfo",value:function(){return fetch("".concat(this._host,"/users/me"),{method:"GET",headers:this._getHeaders()}).then((function(e){if(e.ok)return e.json();throw new Error("Ошибка при загрузке данных")}))}},{key:"editUserInfo",value:function(e){return fetch("".concat(this._host,"/users/me"),{method:"PATCH",headers:{authorization:"dfd0d591-2c36-49ee-a6dc-331afeedf1bc","Content-Type":"application/json"},body:JSON.stringify({name:e.name,about:e.rank})}).then((function(e){if(e.ok)return e.json();throw new Error("Ошибка при загрузке данных")}))}},{key:"editAvatar",value:function(e){return fetch("".concat(this._host,"/users/me/avatar"),{method:"PATCH",headers:{authorization:"dfd0d591-2c36-49ee-a6dc-331afeedf1bc","Content-Type":"application/json"},body:JSON.stringify({avatar:e.link})}).then((function(e){if(e.ok)return e.json();throw new Error("Ошибка при загрузке данных")}))}},{key:"setLikeCard",value:function(e){return fetch("".concat(this._host,"/cards/").concat(e,"/likes"),{method:"PUT",headers:{authorization:"dfd0d591-2c36-49ee-a6dc-331afeedf1bc","Content-Type":"application/json"}}).then((function(e){if(e.ok)return e.json();throw new Error("Ошибка при загрузке данных")}))}},{key:"removeLikeCard",value:function(e){return fetch("".concat(this._host,"/cards/").concat(e,"/likes"),{method:"DELETE",headers:{authorization:"dfd0d591-2c36-49ee-a6dc-331afeedf1bc","Content-Type":"application/json"},body:JSON.stringify({})}).then((function(e){if(e.ok)return e.json();throw new Error("Ошибка при загрузке данных")}))}}])&&U(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function V(e){return V="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},V(e)}function z(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function H(){return H="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var o=J(e,t);if(o){var r=Object.getOwnPropertyDescriptor(o,t);return r.get?r.get.call(arguments.length<3?e:n):r.value}},H.apply(this,arguments)}function J(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=M(e)););return e}function F(e,t){return F=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},F(e,t)}function G(e,t){if(t&&("object"===V(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function M(e){return M=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},M(e)}var K=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&F(e,t)}(c,e);var t,n,o,r,i=(o=c,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=M(o);if(r){var n=M(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return G(this,e)});function c(e){var t,n=e.popupSelector;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),(t=i.call(this,n))._formSubmit=t._popup.querySelector(".popup__delivery"),t}return t=c,(n=[{key:"setEventListeners",value:function(){H(M(c.prototype),"setEventListeners",this).call(this)}}])&&z(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),c}(b),Q=new x(".popup-bigpic");Q.setEventListeners();var W=new K({popupSelector:".popup-delete"});W.setEventListeners();var X=new j({popupSelector:".popup-avatar",submitCallBack:function(e){X.loading(!0),oe.editAvatar(e).then((function(e){console.log(e),ne.setUserInfo(e),X.close()}))}});X.setEventListeners();var Y=new j({popupSelector:".popup-profile",submitCallBack:function(e){Y.loading(!0),oe.editUserInfo(e).then((function(e){console.log(e),ne.setUserInfo(e),Y.close()})).catch((function(e){console.log("Error: ".concat(e))}))}});Y.setEventListeners();var Z=new j({popupSelector:".popup-post",submitCallBack:function(e){Z.loading(!0),oe.addCard(e).then((function(e){console.log(e),$.addItem(re(e)),Z.close()})).catch((function(e){console.log("ошибочка вышла")}))}});Z.setEventListeners();var $=new v({renderer:function(e){$.addItem(re(e))}},".elements");new _(e,r).enableValidation();var ee=new _(e,i);ee.enableValidation(),new _(e,a).enableValidation();var te,ne=new N({userName:".profile__name",userInfo:".profile__rank",avatar:".profile__avatar"}),oe=new A({host:"https://mesto.nomoreparties.co/v1/cohort-47/",token:"dfd0d591-2c36-49ee-a6dc-331afeedf1bc","Content-Type":"application/json"});function re(t){var n=new f({config:e,data:t,userName:te,handleCardClick:function(e,t){Q.open(e,t)},selectorTemplate:".element-template",handleDeleteIconClick:function(e){console.log(e),W.open(),c.addEventListener("click",(function(){!function(e){oe.deleteCard(e).then((function(e){})).catch((function(e){return console.log("Ошибочка вышла")}))}(e),W.close()}))},handleSetLike:function(e){console.log(e),oe.setLikeCard(e).then((function(t){console.log(t),n.likeCard(e)})).catch((function(e){console.log("Ошибка: ".concat(e))}))},handleRemoveLike:function(e){console.log(e),oe.removeLikeCard(e).then((function(e){console.log(e)})).catch((function(e){console.log("Ошибка: ".concat(e))}))}});return n.generateCard()}oe.getUserInfo().then((function(e){ne.setUserInfo(e),te=e.name})).catch((function(e){console.log("Ошибочка вышла")})),oe.getCards().then((function(e){console.log(e),$.setCards(e),$.renderElements()})),t.addEventListener("click",(function(){var e=ne.getUserInfo();n.value=e.username,o.value=e.info,Y.open()})),u.addEventListener("click",(function(){ee.disableSubmitButton(),Z.open()})),l.addEventListener("click",(function(){X.open()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,